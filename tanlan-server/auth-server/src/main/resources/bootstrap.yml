server:
  port: 8090

spring:
  application:
    name: @name.prefix@-@project.artifactId@
  profiles:
    active: @profile.env@
  boot:
    admin:
      client:
        url: ${SPRING_BOOT_ADMIN_SERVER_URI:http://localhost:8000}
        instance:
          metadata:
            user.name: ${spring.security.user.name}
            user.password: ${spring.security.user.password}
  cloud:
    config:
      #      uri: ${SPRING_CONFIG_URI:http://localhost:8888}
      profile: @profile.env@ #指定运行环境: dev/test/staging/prod
      label: @profile.label@ #指定分支: dev/master/...
      discovery:
        enabled: true
        service-id: @name.prefix@-config-server
      fail-fast: true
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      retry:
        initial-interval: 2000
        max-interval: 10000
        multiplier: 2
        max-attempts: 10
  security:
    basic:
      enabled: false #禁用默认的 Basic Authentication
    user:
      name: admin
      password: ${EUREKA_SERVER_PASSWORD:admin}
    oauth2:
      resource:
        filter-order: 3 #配置过滤器链的顺序
  jackson:
    time-zone: GMT+8 # 解决 jackson 转换的时候出现的时区问题
    date-format: yyyy-MM-dd HH:mm:ss # 日期格式化时使用 2018-01-01 23:59:01 的格式
    property-naming-strategy: SNAKE_CASE # 使用下划线方式格式化字段
    default-property-inclusion: NON_NULL # 忽略 null值

#info
info:
  version: @project.version@
  formatter-version: v@project.version@
  name:  @name.prefix@-@project.artifactId@
  description: @project.description@
  build-timestamp: @timestamp@

---
spring:
  profiles: dev

eureka:
  instance:
    #hostname: registry
    prefer-ip-address: true
    #instance-id: @profile.env@:${spring.application.name}:${server.port}
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，
    #这个配置一般为服务刷新时间配置的三倍 默认90s
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次 默认30s
    lease-renewal-interval-in-seconds: 5
  #eureka client刷新本地缓存时间 默认30s
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/
---
spring:
  profiles: test

eureka:
  instance:
    #hostname: registry
    prefer-ip-address: true
    #instance-id: dev:${spring.application.name}:${server.port}
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，
    #这个配置一般为服务刷新时间配置的三倍 默认90s
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次 默认30s
    lease-renewal-interval-in-seconds: 5
  #eureka client刷新本地缓存时间 默认30s
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/

---
spring:
  profiles: staging

eureka:
  instance:
    #hostname: registry
    prefer-ip-address: true
    #instance-id: dev:${spring.application.name}:${server.port}
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，
    #这个配置一般为服务刷新时间配置的三倍 默认90s
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次 默认30s
    lease-renewal-interval-in-seconds: 5
  #eureka client刷新本地缓存时间 默认30s
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/

---

spring:
  profiles: prod

eureka:
  instance:
    #hostname: registry
    prefer-ip-address: true
    #instance-id: dev:${spring.application.name}:${server.port}
    metadata-map:
      user.name: ${spring.security.user.name}
      user.password: ${spring.security.user.password}
    #服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除
    #注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，
    #这个配置一般为服务刷新时间配置的三倍 默认90s
    lease-expiration-duration-in-seconds: 15
    #服务刷新时间配置，每隔这个时间会主动心跳一次 默认30s
    lease-renewal-interval-in-seconds: 5
  #eureka client刷新本地缓存时间 默认30s
  client:
    registryFetchIntervalSeconds: 5
    service-url:
      defaultZone: http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/

